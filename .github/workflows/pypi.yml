name: PyPI Release

on:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  pull_request:

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          default: true
      - name: Install maturin
        run: pip install maturin
      - name: Build wheels - x86_64
        run: |
          maturin build --target x86_64-apple-darwin --release --out dist
          pip install rhit --no-index --find-links dist --force-reinstall
      - name: Build wheels - universal2
        env:
          DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
          MACOSX_DEPLOYMENT_TARGET: '10.9'
        run: |
          # set SDKROOT for C dependencies
          export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
          maturin build --release --universal2 --out dist --no-sdist
          pip install rhit --no-index --find-links dist --force-reinstall
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [
          { python-architecture: "x64", target: "x86_64-pc-windows-msvc" },
          { python-architecture: "x86", target: "i686-pc-windows-msvc" },
        ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: ${{ matrix.platform.python-architecture }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          profile: minimal
          default: true
      - name: Install maturin
        run: pip install maturin
      - name: Build wheels
        run: |
          maturin build --release --out dist --no-sdist --target ${{ matrix.platform.target }}
          pip install rhit --no-index --find-links dist --force-reinstall
          rhit --help
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [
          { manylinux: '2010', target: "x86_64-unknown-linux-musl", image_tag: "x86_64-musl" },
          { manylinux: '2010', target: "i686-unknown-linux-musl", image_tag: "i686-musl" },
          { manylinux: '2014', target: "aarch64-unknown-linux-musl", image_tag: "aarch64-musl" },
          { manylinux: '2014', target: "armv7-unknown-linux-musleabihf", image_tag: "armv7-musleabihf" },
        ]
    container:
      image: docker://benfred/rust-musl-cross:${{ matrix.platform.image_tag }}
      env:
        RUSTUP_HOME: /root/.rustup
        CARGO_HOME: /root/.cargo
    steps:
      - uses: actions/checkout@v2
      - name: Build Wheels
        run: |
          pip3 install maturin
          maturin build --no-sdist --release -o dist --target ${{ matrix.platform.target }} --manylinux ${{ matrix.platform.manylinux }}
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ linux, macos, windows ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
